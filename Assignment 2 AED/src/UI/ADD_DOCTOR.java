/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import Hospital_Management.Appointment;
import Hospital_Management.Doctor;
import Hospital_Management.Doctor_Details;
//import Hospital_Management.Doctordetails;
import Hospital_Management.Doctor_Directory;
import Hospital_Management.Encounter;
import Hospital_Management.Patient;
import Hospital_Management.Patient_Directory;
import Hospital_Management.Person;
import Hospital_Management.Person_Directory;
import Hospital_Management.Vital_Signs;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;

/**
 *
 * @author PRIYANSHI TANEJA
 */
public class ADD_DOCTOR extends javax.swing.JPanel {
    
    public ArrayList<Person> filterList = new ArrayList<>();
    Doctor chosenDoctor;
    Person chosenPerson;
    /**
     * Creates new form bookPatientAppointment
     */
    public ADD_DOCTOR () {
        initComponents();
        detailsPanel.setVisible(false);
        filteredList.setVisible(false);
        visitPanel.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchNameField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        filteredList = new javax.swing.JList<>();
        patientLabel = new javax.swing.JLabel();
        detailsPanel = new javax.swing.JPanel();
        addVisit = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        identifierLabel = new javax.swing.JLabel();
        addressLabel = new javax.swing.JLabel();
        zipLabel = new javax.swing.JLabel();
        cityLabel = new javax.swing.JLabel();
        dobLabel = new javax.swing.JLabel();
        stateLabel = new javax.swing.JLabel();
        communityLabel = new javax.swing.JLabel();
        emailLabel = new javax.swing.JLabel();
        phoneNoLabel = new javax.swing.JLabel();
        visitPanel = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        addDoctorDetail = new javax.swing.JButton();
        doctorIdentifierField = new javax.swing.JTextField();
        hospitalNameField = new javax.swing.JTextField();
        specializationField = new javax.swing.JTextField();
        experienceField = new javax.swing.JTextField();

        setBackground(new java.awt.Color(153, 204, 255));

        searchNameField.setBackground(new java.awt.Color(238, 238, 238));
        searchNameField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        searchNameField.setToolTipText("Click to enter your name.");
        searchNameField.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 5));
        searchNameField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchNameFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchNameFieldnameChangeHandler(evt);
            }
        });
        searchNameField.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                searchNameFieldInputMethodTextChanged(evt);
            }
        });
        searchNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchNameFieldActionPerformed(evt);
            }
        });
        searchNameField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchNameFieldKeyReleased(evt);
            }
        });

        filteredList.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        filteredList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                filteredListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(filteredList);

        patientLabel.setText("Select Doctor:");

        detailsPanel.setBackground(new java.awt.Color(255, 255, 255));

        addVisit.setText("Add Doctor");
        addVisit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addVisitActionPerformed(evt);
            }
        });

        jLabel17.setText("Doctor Identifier:");

        jLabel18.setText("Name:");

        jLabel19.setText("Address:");

        jLabel20.setText("Zip Code:");

        jLabel21.setText("City:");

        jLabel22.setText("State:");

        jLabel23.setText("Community Name:");

        jLabel24.setText("DOB:");

        jLabel25.setText("Email ID:");

        jLabel26.setText("Mobile No.");

        nameLabel.setText("Select person to see details! ");

        identifierLabel.setText("Select person to see details! ");

        addressLabel.setText("Select person to see details! ");

        zipLabel.setText("Select person to see details! ");

        cityLabel.setText("Select person to see details! ");

        dobLabel.setText("Select person to see details! ");

        stateLabel.setText("Select person to see details! ");

        communityLabel.setText("Select person to see details! ");

        emailLabel.setText("Select person to see details! ");

        phoneNoLabel.setText("Select person to see details! ");

        javax.swing.GroupLayout detailsPanelLayout = new javax.swing.GroupLayout(detailsPanel);
        detailsPanel.setLayout(detailsPanelLayout);
        detailsPanelLayout.setHorizontalGroup(
            detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailsPanelLayout.createSequentialGroup()
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(detailsPanelLayout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addComponent(addVisit))
                    .addGroup(detailsPanelLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(jLabel17)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20)
                            .addComponent(jLabel21)
                            .addComponent(jLabel22)
                            .addComponent(jLabel23)
                            .addComponent(jLabel24)
                            .addComponent(jLabel25)
                            .addComponent(jLabel26))
                        .addGap(31, 31, 31)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(phoneNoLabel)
                            .addComponent(emailLabel)
                            .addComponent(dobLabel)
                            .addComponent(cityLabel)
                            .addComponent(zipLabel)
                            .addComponent(addressLabel)
                            .addComponent(identifierLabel)
                            .addComponent(nameLabel)
                            .addComponent(stateLabel)
                            .addComponent(communityLabel))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        detailsPanelLayout.setVerticalGroup(
            detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailsPanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(identifierLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(nameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(addressLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(zipLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(cityLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(stateLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(communityLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(dobLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(emailLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(phoneNoLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addVisit))
        );

        visitPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel13.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(67, 100, 100));

        jLabel14.setText("Years");

        jLabel2.setText("Total Experience:");

        jLabel4.setText("Hospital Name:");

        jLabel5.setText("Specialization:");

        jLabel6.setText("Doctor Identifier:");

        addDoctorDetail.setText("Add Doctor Details");
        addDoctorDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDoctorDetailActionPerformed(evt);
            }
        });

        doctorIdentifierField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorIdentifierFieldActionPerformed(evt);
            }
        });

        hospitalNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalNameFieldActionPerformed(evt);
            }
        });

        specializationField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                specializationFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout visitPanelLayout = new javax.swing.GroupLayout(visitPanel);
        visitPanel.setLayout(visitPanelLayout);
        visitPanelLayout.setHorizontalGroup(
            visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(visitPanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6))
                .addGap(34, 34, 34)
                .addGroup(visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(hospitalNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                    .addComponent(specializationField)
                    .addComponent(doctorIdentifierField))
                .addGap(38, 38, 38)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(visitPanelLayout.createSequentialGroup()
                        .addComponent(experienceField, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14))
                    .addComponent(addDoctorDetail))
                .addContainerGap(11, Short.MAX_VALUE))
            .addGroup(visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, visitPanelLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel13)
                    .addGap(138, 138, 138)))
        );
        visitPanelLayout.setVerticalGroup(
            visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(visitPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(hospitalNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(experienceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(specializationField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doctorIdentifierField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(addDoctorDetail))
                .addContainerGap(30, Short.MAX_VALUE))
            .addGroup(visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(visitPanelLayout.createSequentialGroup()
                    .addContainerGap(129, Short.MAX_VALUE)
                    .addComponent(jLabel13)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(detailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(patientLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 451, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(visitPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(patientLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(detailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(visitPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    private void searchNameJFieldFocusGained(java.awt.event.FocusEvent evt) {                                             
        if (searchNameField.getText().equals("Enter here")) {
            searchNameField.setText("");
        }
    } 
    private void searchNameFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchNameFieldFocusGained

    }//GEN-LAST:event_searchNameFieldFocusGained

    private void searchNameFieldnameChangeHandler(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchNameFieldnameChangeHandler
        // TODO add your handling code here:
    }//GEN-LAST:event_searchNameFieldnameChangeHandler

    private void searchNameFieldInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_searchNameFieldInputMethodTextChanged

    }//GEN-LAST:event_searchNameFieldInputMethodTextChanged

    private void searchNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchNameFieldActionPerformed

    private void searchNameFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchNameFieldKeyReleased
        if ("".equals(searchNameField.getText())) {
            return;
        }
        filterList.clear();
        filteredList.removeAll();
        detailsPanel.setVisible(false);
        visitPanel.setVisible(false);
        for (int i = 0; i < Person_Directory.allPeople.size(); i++) {
            Person onGoing = Person_Directory.allPeople.get(i);
            if (onGoing.name.contains(searchNameField.getText())) {
                filterList.add(onGoing);
            }
        }
        filteredList.setVisible(true);
        DefaultListModel model = new DefaultListModel();

        filterList.forEach(doctor -> {
            model.addElement(doctor.personId + " - " + doctor.name);
        });
        filteredList.setModel(model);
        filteredList.setSelectedIndex(0);
    }//GEN-LAST:event_searchNameFieldKeyReleased
    private void hospitalNameField(java.awt.event.FocusEvent evt) {                                                  
        if (hospitalNameField.getText().equals("Enter here")) {
            hospitalNameField.setText("");
        }
    }
    
    private void specializationField(java.awt.event.FocusEvent evt) {                                            
        if (specializationField.getText().equals("Enter here")) {
            specializationField.setText("");
        }
    } 
    
    private void totalExperienceField(java.awt.event.FocusEvent evt) {                                                
        if (experienceField.getText().equals("Enter here")) {
            experienceField.setText("");
        }
    }  
    
     
    private void totalExperience(java.awt.event.FocusEvent evt) {                                      
        if (experienceField.getText().equals("Enter here")) {
            experienceField.setText("");
        }
    } 
    
    private void filteredListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filteredListMouseClicked
        openChosenProfile();
    }//GEN-LAST:event_filteredListMouseClicked
    

    public void restVitals() {
        specializationField.setText("Enter here");
        hospitalNameField.setText("Enter here");
        experienceField.setText("Enter here");
    }

    public int getDoctorId() {
        int foundID = Doctor_Directory.doctorDirectory.size();
        for (int i = 0; i < Doctor_Directory.doctorDirectory.size(); i++) {
            if (Doctor_Directory.doctorDirectory.get(i).personDetails.personId == chosenPerson.personId) {
                System.out.println("--Already a patient");
                foundID = Doctor_Directory.doctorDirectory.get(i).doctorIdentifier;
            }
        }
        System.out.println("new patient--");
        return foundID;
    }

    public Boolean isAlreadyDoctor() {
        Boolean found = false;
        for (int i = 0; i < Doctor_Directory.doctorDirectory.size(); i++) {
            if (Doctor_Directory.doctorDirectory.get(i).personDetails.personId == chosenPerson.personId) {
                found = true;
            }
        }
        return found;
    }

    public Doctor getDoctor() {
        Doctor found = new Doctor();
        for (int i = 0; i < Doctor_Directory.doctorDirectory.size(); i++) {
            if (Doctor_Directory.doctorDirectory.get(i).personDetails.personId == chosenPerson.personId) {
                 found = Doctor_Directory.doctorDirectory.get(i);
            }
        }
        return found;
    }
    
    private void addVisitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addVisitActionPerformed
        visitPanel.setVisible(true);
    }//GEN-LAST:event_addVisitActionPerformed
    public void openChosenProfile() {
        int chosenPersonIndex = filteredList.getSelectedIndex();//get the index of the selection made in the left section.
        if (chosenPersonIndex != -1) {
            chosenPerson = Person_Directory.allPeople.get(chosenPersonIndex);
            chosenDoctor = getDoctor();
            detailsPanel.setVisible(true);
            identifierLabel.setText(String.valueOf(chosenPerson.personId));
            nameLabel.setText(String.valueOf(chosenPerson.name));
            addressLabel.setText(String.valueOf(chosenPerson.address.address));
            zipLabel.setText(String.valueOf(chosenPerson.address.zipcode));
            cityLabel.setText(String.valueOf(chosenPerson.city.city));
            stateLabel.setText(String.valueOf(chosenPerson.city.state));
            communityLabel.setText(String.valueOf(chosenPerson.community.communityName));
            dobLabel.setText((String.valueOf((new SimpleDateFormat("MM/dd/yyyy", Locale.US)).format(chosenPerson.dob))));
            emailLabel.setText(String.valueOf(chosenPerson.email));
            phoneNoLabel.setText(String.valueOf(chosenPerson.mobileNo));
            //Patient Identifier
            doctorIdentifierField.setText(String.valueOf(getDoctorId()));
        }
    }
    
    
    private void addDoctorDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDoctorDetailActionPerformed
              // TODO add your handling code here:
       Boolean isAlreadyADoctor = isAlreadyDoctor();
        String errorMessage = "";
        Doctor_Details details= new Doctor_Details();
        String hospitalNameFieldErrorMessage = details.validateName(String.valueOf(this.hospitalNameField.getText()));
        String specializationFieldErrorMessage = details.validateSpecialization(String.valueOf(this.specializationField.getText()));
        String experienceFieldErrorMessage = details.validateTotalExperience(String.valueOf(this.experienceField.getText()));
        

        errorMessage += hospitalNameFieldErrorMessage;
        errorMessage += specializationFieldErrorMessage;
        errorMessage += experienceFieldErrorMessage;
        

        if (!errorMessage.equals("")) {
            JOptionPane.showMessageDialog(this, errorMessage, "Create Patient's visit", ERROR_MESSAGE);
            return;
        }
        chosenDoctor.personDetails = chosenPerson;

        
        details.hospitalName= String.valueOf(this.hospitalNameField.getText());
        details.specialization = String.valueOf(this.specializationField.getText());
        details.totalExperience = Integer.valueOf(this.experienceField.getText());
        

        Appointment appointment = new Appointment();
        appointment.findings = details;
        appointment.visitDate = new Date();
        chosenDoctor.allAppointmentsHistory.AppointmentHistory.add(appointment);
        int getID = getDoctorId();
        chosenDoctor.doctorIdentifier = getID;

        visitPanel.setVisible(false);

        doctorIdentifierField.setText(String.valueOf(getID));

        if (!isAlreadyADoctor) {
            Doctor_Directory.doctorDirectory.add(chosenDoctor);
        }
        restVitals();
        JOptionPane.showMessageDialog(this, "Doctor created successfully!!", "Create Doctor", INFORMATION_MESSAGE);
    
              
    }//GEN-LAST:event_addDoctorDetailActionPerformed

    private void doctorIdentifierFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorIdentifierFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_doctorIdentifierFieldActionPerformed

    private void hospitalNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hospitalNameFieldActionPerformed

    private void specializationFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_specializationFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_specializationFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addDoctorDetail;
    private javax.swing.JButton addVisit;
    private javax.swing.JLabel addressLabel;
    private javax.swing.JLabel cityLabel;
    private javax.swing.JLabel communityLabel;
    private javax.swing.JPanel detailsPanel;
    private javax.swing.JLabel dobLabel;
    private javax.swing.JTextField doctorIdentifierField;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JTextField experienceField;
    private javax.swing.JList<String> filteredList;
    private javax.swing.JTextField hospitalNameField;
    private javax.swing.JLabel identifierLabel;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel patientLabel;
    private javax.swing.JLabel phoneNoLabel;
    private javax.swing.JTextField searchNameField;
    private javax.swing.JTextField specializationField;
    private javax.swing.JLabel stateLabel;
    private javax.swing.JPanel visitPanel;
    private javax.swing.JLabel zipLabel;
    // End of variables declaration//GEN-END:variables
}
